# no 3
from math import gcd

class Fraction:
    def __init__(self, numerator, denominator):
        if denominator == 0:
            raise ValueError("Denominator cannot be zero")
        self.numerator = numerator
        self.denominator = denominator
        self._simplify()

    def _simplify(self):
        # Simplify the fraction by dividing both the numerator and the denominator by their greatest common divisor
        common_divisor = gcd(self.numerator, self.denominator)
        self.numerator //= common_divisor
        self.denominator //= common_divisor

    def to_rational(self):
        # Return the fraction in rational form (e.g., "1/3")
        return f"{self.numerator}/{self.denominator}"

    def to_float(self):
        # Return the fraction as a floating-point number
        return self.numerator / self.denominator

# Example usage
frac = Fraction(1, 3)
print(frac.to_rational())  # Output: "1/3"
print(frac.to_float())     # Output: "0.3333333333333333"

print("--------------")


